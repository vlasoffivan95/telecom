# -*- coding: utf-8 -*-
"""pyth_nump_30_telecom.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KCO3KyTgG1anayN4WrbYtc-6Ks8Yd0OF
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns



df = pd.read_csv('https://raw.githubusercontent.com/an-2-an/data/master/telecom_churn.csv')

df.head
df.shape

df.Churn = df.Churn.astype(int)

df.Churn.value_counts()

features = [e for e in df.columns if any([s in e for s in ('minutes', 'calls', 'messages', 'length')])]
print(features)
print(len(features))

fig, axes = plt.subplots(nrows=4, ncols=3, figsize=(18, 12))

for idx, feat in enumerate(features):
  sns.boxplot(x='Churn', y=feat, data=df, ax=axes[idx//3, idx%3])

_, axes = plt.subplots(1, 2, figsize=(16, 5))
sns.boxplot(x='Churn', y='Total day minutes', data=df, ax=axes[0]);
sns.violinplot(x='Churn', y='Total day minutes', data=df, ax=axes[1]);

df['Total day minutes'].hist(bins=30);

sns.countplot(data=df, x='Customer service calls', hue='Churn');

pd.crosstab(df.State, df.Churn).T

df.groupby(['State'])['Churn'].agg([np.mean]).sort_values(by='mean', ascending=False).T

from sklearn.manifold import TSNE
from sklearn.preprocessing import StandardScaler 

X = df.drop(['Churn', 'State'], axis=1)
X['International plan'] = X['International plan'].map({'Yes':1, 'No':0})
X['Voice mail plan'] = X['Voice mail plan'].map({'Yes':1, 'No':0})
X.head(3)

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
X_scaled[:3]

tsne = TSNE(random_state=9)
tsne_repr = tsne.fit_transform(X_scaled)

tsne_repr[:3]

plt.figure(figsize=(10, 10))
plt.scatter(tsne_repr[:, 0], tsne_repr[:, 1]);

plt.figure(figsize=(7, 7))
plt.scatter(tsne_repr[:, 0], tsne_repr[:, 1], c=df['Churn'].map({0:'blue', 1:'red'}));

_, axes = plt.subplots(1, 2, figsize=(13, 5)) 
axes[0].scatter(tsne_repr[:, 0], tsne_repr[:, 1], c=df['International plan'].map({'Yes':'yellow', 'No':'grey'}));
axes[1].scatter(tsne_repr[:, 0], tsne_repr[:, 1], c=df['Voice mail plan'].map({'Yes':'pink', 'No':'black'}));

